buildscript { //querydsl 설정
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.9'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"  //querydsl 설정
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//swagger 적용
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'

	//p6spy 적용
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'

	//querydsl 적용
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'org.jetbrains:annotations:23.0.0'
    testImplementation 'junit:junit:4.13.1'
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

	//security 적용
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//validation 적용
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// jjwt 토큰 생성 라이브러리 적용
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	// jwt 토큰 생성 라이브러리
	implementation group: 'com.auth0', name: 'java-jwt', version: '4.2.1'

	//json 변환 (JsonObject)
	implementation 'org.json:json:20200518'

	// redis 적용
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '2.4.10'

	//map struct 적용
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

	//mysql 설정
	runtimeOnly 'com.mysql:mysql-connector-j'

	//aws s3 의존성 추가
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	compileOnly 'org.projectlombok:lombok'
//	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// querydsl 세팅 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
// querydsl 세팅 끝


//jar build 시 오류 해결
test.onlyIf {
	!project.hasProperty('test')
}
